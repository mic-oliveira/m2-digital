openapi: 3.0.0
info:
  title: Teste M2 Digital
  contact: {}
  version: '1.0'
servers:
  - url: http://localhost:8089/api
    variables: {}

paths:
  "/groups":
    parameters:
      - name: include
        in: query
        schema:
          type: string
          example: 'cities'
      - name: filter[name]
        in: query
        description: ''
        required: false
        style: form
        explode: true
        schema:
          type: string
          example:
      - name: page
        in: query
        description: ''
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: per_page
        in: query
        description: ''
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 15
    get:
      tags:
        - Groups
      summary: Listagem de Grupos
      operationId: ListGroups
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      servers:
        - url: http://localhost:8089/api
          variables: {}
    post:
      tags:
        - Groups
      summary: Criação de Grupos
      operationId: CreateGroups
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupsRequest'
            example:
              name: Grupo teste
              cities_id: [1,2]
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            {

            }
      deprecated: false
      servers:
        - url: http://localhost:8089/api
          variables: {}
  /groups/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Id do grupo
        schema:
          type: integer
          format: int64
          minimum: 1
          example: 1
    get:
      tags:
        - Groups
      summary: Busca de grupo por id
      operationId: FindGroup
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      servers:
        - url: http://localhost:8089/api
          variables: { }
    put:
      tags:
        - Groups
      summary: Atualização de grupo
      operationId: UpdateGroup
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
            example:
              name: Teste 2
        required: true
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      servers:
        - url: http://localhost:8089/api
          variables: { }
    delete:
      tags:
        - Groups
      summary: Deleta grupo por id
      operationId: DeleteGroup
      responses:
        '200':
          description: 'Grupo deletado e retorna json do objeto removido'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResource'
        '404':
          description: 'Grupo não encontrado'
          headers: {}
      deprecated: false
      servers:
        - url: http://localhost:8089/api
          variables: {}
  # CITIES
  "/cities":
    parameters:
      - name: include
        in: query
        schema:
          type: string
          example: 'cities'
    get:
      tags:
        - City
      summary: Listagem de Grupos
      operationId: ListGroups
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      servers:
        - url: http://localhost:8089/api
          variables: { }
    post:
      tags:
        - City
      summary: Criação de Grupos
      operationId: CreateGroups
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupsRequest'
            example:
              name: Grupo teste
        required: true
      responses:
        '200':
          description: ''
          headers: { }
          content:
            {

            }
      deprecated: false
      servers:
        - url: http://localhost:8089/api
          variables: { }
  /cities/{id}:
    parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          example: 1
      - name: include
        in: query
        schema:
          type: string
          example: 'cities'
    get:
      parameters:
        - name: filter[name]
          in: query
          description: ''
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: teste3
        - name: page
          in: query
          description: ''
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
        - name: per_page
          in: query
          description: ''
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 15
      tags:
        - City
      summary: Busca de grupo por id
      operationId: FindGroup
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      servers:
        - url: http://localhost:8089/api
          variables: { }
    put:
      tags:
        - City
      summary: Atualização de grupo
      operationId: UpdateGroup
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
            example:
              name: Teste 2
        required: true
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      servers:
        - url: http://localhost:8089/api
          variables: { }
    delete:
      tags:
        - City
      summary: Deleta grupo por id
      operationId: DeleteGroup
      responses:
        '200':
          description: 'Grupo deletado e retorna json do objeto removido'
          headers: { }
        '404':
          description: 'Grupo não encontrado'
          headers: { }
      deprecated: false
      servers:
        - url: http://localhost:8089/api
          variables: { }

components:
  schemas:
    GroupResource:
      type: object
      properties:
        name:
          type: string
          example: "Grupo Teste"
        cities_id:
          type: array
          example: [1,2,3]
        created_at:
          type: string
          example: "2022-11-05T23:44:46.000000Z"
        updated_at:
          type: string
          example: "2022-11-05T23:44:46.000000Z"

    CreateGroupsRequest:
      title: CreateGroupsRequest
      required:
        - name
      type: object
      properties:
        name:
          type: string
        cities_id:
          type: array
          items:
            type: integer
            example: [1,2,3]
      example:
        name: Grupo teste,
        cities_id: [1,2,3]
    UpdateGroupRequest:
      title: UpdateGroupRequest
      required:
        - name
      type: object
      properties:
        name:
          type: string
      example:
        name: Teste 2
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security:
  - bearer: []

